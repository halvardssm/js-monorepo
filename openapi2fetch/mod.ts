import openapiTS, { astToString } from "openapi-typescript";
import { resolve, toFileUrl } from "jsr:@std/path";
import { Command } from "@cliffy/command";

if (import.meta.main) {
  await new Command()
    .option(
      "--src <src>",
      "The OpenAPI spec file",
      {
        required: true,
      },
    )
    .option("--out <out>", "The output file", {
      default: "./spec.ts",
    })
    .action(async ({ src, out }) => {
      await openapi2fetch({ src, out });
    })
    .parse();
}

export async function openapi2fetch({ src, out }: OpenApi2FetchOptions) {
  const parsedSrc = src.startsWith("http")
    ? src
    : toFileUrl(resolve(src)).toString();
  const parsedOut = resolve(out);

  const res = await fetch(parsedSrc);

  const api = await res.json();

  const ast = await openapiTS(api);

  const specs = astToString(ast);

  const content = `/**
* This file is autogenerated.
* 
* Do not make manual changes, or if you do, make sure to port them on generation!
* 
* Make sure to have 'npm:openapi-fetch' installed.
*/

import createOpenApiFetchClient from "openapi-fetch";

export const createApiClient = createOpenApiFetchClient<paths>;

${specs}`;

  await Deno.writeTextFile(parsedOut, content);
}

type OpenApi2FetchOptions = {
  src: string;
  out: string;
};
